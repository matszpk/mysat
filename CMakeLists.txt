CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(MySat)

SET(MYSAT_MAJOR_VERSION 0)
SET(MYSAT_MINOR_VERSION 0)
SET(MYSAT_MICRO_VERSION 1)
SET(MYSAT_VERSION ${MYSAT_MAJOR_VERSION}.${MYSAT_MINOR_VERSION}.${MYSAT_MICRO_VERSION})

ENABLE_LANGUAGE(CXX)

ADD_DEFINITIONS(-DMYSAT_VERSION=\"${MYSAT_VERSION}\")

SET(CMAKE_CXX_FLAGS_DEBUG "-Wall -g -O0")
SET(CMAKE_CXX_FLAGS_RELEASE "-Wall -O2 -funroll-loops")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-Wall -pg -g -O2 -funroll-loops")
#SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-Wall -fprofile-arcs -ftest-coverage -g -O2 -funroll-loops")

FIND_PACKAGE(PkgConfig REQUIRED)

PKG_CHECK_MODULES(GLIBMM REQUIRED glibmm-2.4)
PKG_CHECK_MODULES(GTHREAD REQUIRED gthread-2.0)

IF(${PROJECT_SOURCE_DIR} MATCHES ${PROJECT_BINARY_DIR})
  MESSAGE("Please do an out-of-tree build:")
  MESSAGE("rm -f CMakeCache.txt; mkdir -p default; cd default; cmake ..; make")
  MESSAGE(FATAL_ERROR "in-tree-build detected")
ENDIF(${PROJECT_SOURCE_DIR} MATCHES ${PROJECT_BINARY_DIR})

ENABLE_TESTING()

PKG_CHECK_MODULES(CPPUNIT cppunit)

SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH ON)
SET(CMAKE_INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/lib)

INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR}/libsatutils)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/libsatutils)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/libsatutils)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/mysat)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/satgen)
ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/satmap)
